import Visitor from '../../domain/entities/visitor';
import Claim from '../../domain/entities/claim'; 
import VisitorRepository from '../../infrastructure/repositories/visitor_repository';

class GetLastClaimsByVisitorAction {
  public async execute(visitorId: string, numberOfClaims: number): Promise<Claim[]> {
    const visitor: Visitor | null = await VisitorRepository.findOneById(visitorId);

    if (!visitor) {
      throw new Error(`Visitor with ID ${visitorId} not found.`);
    }

    const lastClaims: Claim[] = visitor.getClaims().slice(-numberOfClaims);

    return lastClaims;
  }
}

export default new GetLastClaimsByVisitorAction();